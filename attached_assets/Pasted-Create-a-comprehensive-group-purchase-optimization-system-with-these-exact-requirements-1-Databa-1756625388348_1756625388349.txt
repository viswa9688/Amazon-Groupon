Create a comprehensive group purchase optimization system with these exact requirements:
1. **Database Setup**: 
   - Add 20 additional products with "John" as seller (sellerId: "john-seller-456")
   - Products should span categories: Electronics, Fashion, Home & Garden, Sports, Books
   - Each product should have realistic pricing ($15-$300 range)
   - Create multiple mock group purchases with different participant counts
   - Ensure products have discount tiers for group buying
2. **Cart Count Notification**:
   - Add red badge with cart item count to header cart button (like shopping cart icon with "0" badge)
   - Update badge dynamically when items are added/removed from cart
   - Fetch cart count from backend and display real-time updates
3. **Maximum Similarity Group Matching Algorithm**:
   - Instead of 80% threshold, find groups with MAXIMUM similar products to user's cart
   - Calculate similarity as: (matching_products / total_cart_products) * 100
   - Prioritize groups that cover most cart items with highest total savings
   - Sort groups by similarity score descending, then by potential savings
4. **Enhanced Group Suggestions**:
   - Show "Smart Group Suggestions" card in cart page
   - Display top 3 matching groups with similarity percentage (e.g., "95% match")
   - Show potential savings per group
   - Add "Join Group" buttons that redirect to product detail pages
   - Calculate and display total possible savings across all suggestions
5. **Optimization Logic**:
   - Primary goal: Maximize number of products covered across different groups
   - Secondary goal: Maximize total discount value
   - Show combinations like "Join these 2 groups to get all your products with 23% total savings"
   - Display uncovered products and suggest alternatives
6. **Backend API Enhancements**:
   - Improve `/api/cart/similar-groups` endpoint for maximum similarity matching
   - Add `/api/cart/optimization-suggestions` for best combination recommendations
   - Update cart endpoints to return item counts
   - Ensure group similarity cache is populated and updated
7. **Frontend Cart Updates**:
   - Update cart page to show real cart item count in header
   - Display group suggestions with improved UI showing similarity scores
   - Add potential savings calculations and display
   - Show "Save $X by joining groups!" messaging
Implement all components to work together seamlessly - the cart badge should update in real-time, group suggestions should prioritize maximum coverage and savings, and the similarity algorithm should find the best possible combinations for users to save money on their entire cart.